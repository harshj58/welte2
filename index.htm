<!DOCTYPE html>
<html lang=en>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Shorcuteez</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap'); /* Adding a modern font */

        body {
            font-family: 'Poppins', sans-serif; /* Using Poppins font */
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            margin: 0;
            background-color: #e0f2f7; /* Lighter, softer background blue */
            color: #333; /* Darker text for better readability */
            transition: background-color 0.5s ease, color 0.5s ease; /* Smooth transition for dark mode */
            padding: 10px; /* Add some padding for small screens */
            box-sizing: border-box; /* Include padding in element's total width and height */

            /* Confetti background */
            background-image:
             radial-gradient(circle, #ffdd00 5%, transparent 5%),
             radial-gradient(circle, #ff6699 5%, transparent 5%),
             radial-gradient(circle, #00ccff 5%, transparent 5%),
             radial-gradient(circle, #66ff66 5%, transparent 5%),
             radial-gradient(circle, #cc99ff 5%, transparent 5%);
            background-size: 20px 20px, 30px 30px, 40px 40px, 50px 50px, 60px 60px;
            background-position: 0 0, 10px 5px, 5px 15px, 15px 0px, 20px 10px;
            animation: confetti-scatter 5s linear infinite;
        }

        /* Dark Mode Styles */
        body.dark-mode {
            background-color: #2c2c2c; /* Dark background */
            color: #f0f0f0; /* Light text */
            /* Dark mode confetti background */
            background-image:
             radial-gradient(circle, #b3a100 5%, transparent 5%),
             radial-gradient(circle, #b34773 5%, transparent 5%),
             radial-gradient(circle, #008ab3 5%, transparent 5%),
             radial-gradient(circle, #47b347 5%, transparent 5%),
             radial-gradient(circle, #9973b3 5%, transparent 5%);
            background-size: 20px 20px, 30px 30px, 40px 40px, 50px 50px, 60px 60px;
            background-position: 0 0, 10px 5px, 5px 15px, 15px 0px, 20px 10px;
            animation: confetti-scatter-dark 5s linear infinite;
        }
        body.dark-mode .search-container,
        body.dark-mode #contentArea,
        body.dark-mode .feedback-section {
            background-color: #3a3a3a; /* Darker container background */
            box-shadow: 0 4px 15px rgba(0,0,0,0.5); /* More prominent shadow in dark mode */
        }
        body.dark-mode .search-container input[type="search"] {
            background-color: #4a4a4a;
            border-color: #555;
            color: #f0f0f0;
        }
        body.dark-mode .search-container button {
            background-color: #555; /* Dark mode button color */
        }
        body.dark-mode .search-container button:hover {
            background-color: #666; /* Dark mode button hover */
        }
        body.dark-mode #contentArea h1,
        body.dark-mode .feedback-section h2 {
            color: #FF6B6B; /* Brighter red for dark mode title */
        }
        body.dark-mode #contentArea h3 {
            color: #ccc; /* Lighter grey for dark mode subtitle */
        }
        body.dark-mode #contentArea p {
            color: #e0e0e0; /* Lighter text for dark mode paragraphs */
        }
        body.dark-mode #contentArea a {
            color: #7DB9DE; /* Lighter blue for dark mode links */
        }
        body.dark-mode #contentArea a:hover {
            color: #9ECFF4; /* Lighter blue on hover for dark mode links */
        }
        body.dark-mode hr {
            background-image: linear-gradient(to right, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0));
        }
        body.dark-mode button {
            background-color: #555; /* Dark mode button general */
            color: #f0f0f0;
            box-shadow: 0 2px 8px rgba(0,0,0,0.4);
        }
        body.dark-mode button:hover {
            background-color: #666;
            transform: translateY(-2px);
        }
        body.dark-mode button[onclick="clearContent()"] {
            background-color: #8B0000; /* Darker red for clear content in dark mode */
        }
        body.dark-mode button[onclick="clearContent()"]:hover {
            background-color: #A00000;
        }
        body.dark-mode #darkModeToggle {
            background-color: #f0f0f0; /* White background for dark mode toggle in dark mode */
            color: #333; /* Dark text for dark mode toggle in dark mode */
        }
        body.dark-mode #darkModeToggle:hover {
            background-color: #e0e0e0;
        }
        body.dark-mode > p,
        body.dark-mode > a[href="https://help-page-pied.vercel.app/"],
        body.dark-mode .feedback-section textarea {
            color: #b0b0b0; /* Lighter color for footer text and textarea in dark mode */
        }
        body.dark-mode .feedback-section textarea {
            background-color: #4a4a4a;
            border-color: #555;
        }
        body.dark-mode .feedback-section button {
            background-color: #1a73e8; /* Blue for submit button in dark mode */
            color: #f0f0f0;
        }
        body.dark-mode .feedback-section button:hover {
            background-color: #0c5cb2;
        }
        body.dark-mode .stars .fa-star {
            color: #666; /* Default star color in dark mode */
        }
        body.dark-mode .stars .fa-star.selected {
            color: #FFD700; /* Selected star color in dark mode */
        }


        .search-container {
            background-color: white;
            padding: 25px; /* Increased padding */
            border-radius: 12px; /* More rounded corners */
            box-shadow: 0 4px 12px rgba(0,0,0,0.1); /* Softer, larger shadow */
            margin-bottom: 30px; /* More space below search */
            display: flex; /* Use flexbox for alignment */
            align-items: center; /* Vertically align items */
            justify-content: center; /* Horizontally center items */
            transition: background-color 0.5s ease, box-shadow 0.5s ease;
            width: 90%; /* Responsive width */
            max-width: 600px; /* Max width for larger screens */
            box-sizing: border-box; /* Include padding in width */
        }
        .search-container input[type="search"] {
            padding: 12px; /* Increased padding */
            border: 1px solid #c0e0eb; /* Softer border color */
            border-radius: 6px;
            flex-grow: 1; /* Allow input to grow and take available space */
            font-size: 17px;
            box-sizing: border-box; /* Include padding in width */
            transition: background-color 0.5s ease, border-color 0.5s ease, color 0.5s ease;
            min-width: 150px; /* Minimum width for input on smaller screens */
        }
        .search-container button {
            padding: 12px 20px; /* Increased padding */
            background-color: #1a73e8; /* Google-like blue */
            color: white;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 17px;
            margin-left: 10px;
            transition: background-color 0.3s ease; /* Smooth hover effect */
            white-space: nowrap; /* Prevent button text from wrapping */
        }
        .search-container button:hover {
            background-color: #0c5cb2; /* Darker blue on hover */
        }

        #contentArea {
            background-color: white;
            padding: 30px; /* More padding */
            border-radius: 12px; /* More rounded corners */
            box-shadow: 0 4px 12px rgba(0,0,0,0.1); /* Softer, larger shadow */
            width: 90%; /* Responsive width */
            max-width: 650px; /* Increased max-width */
            text-align: center;
            margin-top: 20px; /* Space above content area */
            transition: background-color 0.5s ease, box-shadow 0.5s ease;
            box-sizing: border-box;
        }
        #contentArea p {
            margin-top: 20px; /* More space above paragraphs */
            margin-bottom: 8px; /* More space below paragraphs */
            font-weight: 600; /* Slightly bolder */
            color: #555; /* Softer color for paragraph titles */
            font-size: 1.05em; /* Slightly larger font */
            transition: color 0.5s ease;
        }
        #contentArea a {
            display: block;
            margin-bottom: 12px; /* More space below links */
            word-wrap: break-word;
            color: #1a73e8; /* Default link color */
            text-decoration: none; /* Remove underline */
            transition: color 0.2s ease, text-decoration 0.2s ease; /* Smooth hover */
        }
        #contentArea a:hover {
            color: #0c5cb2; /* Darker blue on hover */
            text-decoration: underline; /* Underline on hover */
        }

        /* Specific link colors for main content */
        #contentArea a[href*="http://www.youtube.com/"] { color: #FF0000; }
        #contentArea a[href*="w3schools.com"] { color: #04AA6D; }
        #contentArea a[href*="google.com"] { color: #4285F4; }
        #contentArea a[href*="softonic.com"] { color: #ED6A5E; }
        #contentArea a[href*="microsoft.com"] { color: #0078D4; }
        #contentArea a[href*="openai.com/chatgpt"] { color: #74AA9C; }
        #contentArea a[href*="gemini.google.com"] { color: #4285F4; }
        #contentArea a[href*="deepseek.com"] { color: #8A2BE2; } /* Violent alternative */
        #contentArea a[href*="github.com"] { color: #333; }
        #contentArea a[href*="wikipedia.org"] { color: #0645AD; }
        #contentArea a[href*="yahoo.com"] { color: #720E9E; }
        #contentArea a[href*="yandex.ru"] { color: #FC3F1D; }
        #contentArea a[href*="duckduckgo.com"] { color: #DE5833; }
        #contentArea a[href*="openai.com"] { color: #45B69C; }
        #contentArea a[href*="facebook.com"] { color: #1877F2; }
        #contentArea a[href*="instagram.com"] { color: #C13584; }
        #contentArea a[href*="x.com"] { color: #000000; }
        #contentArea a[href*="whatsapp.com"] { color: #25D366; }
        #contentArea a[href*="reddit.com"] { color: #FF4500; }
        #contentArea a[href*="tiktok.com"] { color: #000000; } /* Keep grey or black */
        #contentArea a[href*="linkedin.com"] { color: #0A66C2; }
        #contentArea a[href*="vk.com"] { color: #4A76A8; }
        #contentArea a[href*="telegram.com"] { color: #0088CC; }
        #contentArea a[href*="discord.com"] { color: #5865F2; }
        #contentArea a[href*="pinterest.com"] { color: #E60023; }
        #contentArea a[href*="tumblr.com"] { color: #36465D; }
        #contentArea a[href*="netflix.com"] { color: #E50914; }
        #contentArea a[href*="live.com"] { color: #0078D4; }
        #contentArea a[href*="microsoftonline.com"] { color: #00A4EF; }
        #contentArea a[href*="baidu.com"] { color: #2932E1; }
        #contentArea a[href*="temu.com"] { color: #F05123; }
        #contentArea a[href*="office.com"] { color: #D83B01; }
        #contentArea a[href*="apple.com"] { color: #000000; }
        #contentArea a[href*="weather.com"] { color: #007bff; }
        #contentArea a[href*="canva.com"] { color: #00C4CC; }
        #contentArea a[href*="vercel.com"] { color: #000000; }
        #contentArea a[href*="https://www.spotify.com"] { color: #1DB954; }


        #contentArea h1 {
            color: #D32F2F; /* More vibrant red for main title */
            font-size: 2.8em; /* Larger title */
            margin-bottom: 10px;
            text-shadow: 1px 1px 2px rgba(0,0,0,0.1); /* Subtle text shadow */
            transition: color 0.5s ease;
        }
        #contentArea h3 {
            color: #666; /* Softer grey for subtitles */
            margin-top: 0;
            margin-bottom: 25px; /* More space below subtitle */
            font-weight: 400; /* Lighter font weight */
            font-size: 1.5em; /* Slightly larger */
            transition: color 0.5s ease;
        }
        #contentArea hr {
            border: 0;
            height: 1px;
            background-image: linear-gradient(to right, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0));
            margin: 30px 0; /* More spacing around horizontal rules */
            transition: background-image 0.5s ease;
        }
        #contentArea img {
            width: 120px; /* Slightly larger image if present */
            display: block;
            margin: 0 auto 25px auto; /* More margin */
        }

        /* Styles for the "Show Content" and "Clear Content" buttons */
        button {
            padding: 12px 25px;
            background-color: #28a745; /* Green for show content */
            color: white;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 18px;
            margin: 15px 10px; /* Spacing between buttons */
            transition: background-color 0.3s ease, transform 0.2s ease, color 0.5s ease;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        button:hover {
            background-color: #218838; /* Darker green on hover */
            transform: translateY(-2px); /* Slight lift effect */
        }
        button[onclick="clearContent()"] {
            background-color: #dc3545; /* Red for clear content */
        }
        button[onclick="clearContent()"]:hover {
            background-color: #c82333; /* Darker red on hover */
        }

        /* Footer styles */
        body > p { /* Target the direct paragraph child of body for footer */
            margin-top: 30px; /* Space above the footer */
            font-size: 0.9em;
            color: #777;
            text-align: center;
            transition: color 0.5s ease;
            word-wrap: break-word; /* Ensure text wraps */
            padding: 0 10px; /* Add padding to prevent text from touching edges */
        }

        body > a[href="https://help-page-pied.vercel.app/"] { /* Target the HELP link in footer */
            margin-top: 10px;
            font-size: 1em;
            color: #1a73e8;
            text-decoration: none;
            transition: color 0.2s ease;
        }
        body > a[href="https://help-page-pied.vercel.app/"]:hover {
            color: #0c5cb2;
            text-decoration: underline;
        }

        /* Specific Gaming Website Link Colors */
        #contentArea a[href*="roblox.com"] { color: #2D3B47; }
        #contentArea a[href*="steampowered.com"] { color: #171A21; }
        #contentArea a[href*="poki.com"] { color: #E70000; }
        #contentArea a[href*="xbox.com"] { color: #107C10; }
        #contentArea a[href*="playstation.com"] { color: #0070D1; }
        #contentArea a[href*="epicgames.com"] { color: #313131; }
        #contentArea a[href*="nintendo.com"] { color: #E60012; }
        #contentArea a[href*="minecraft.net"] { color: #3C8528; } /* Minecraft green */

        /* Feedback Section Styles */
        .feedback-section {
            background-color: white;
            padding: 25px;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            width: 90%; /* Responsive width */
            max-width: 650px;
            text-align: center;
            margin-top: 40px; /* More space above feedback section */
            transition: background-color 0.5s ease, box-shadow 0.5s ease;
            box-sizing: border-box;
        }

        .feedback-section h2 {
            color: #D32F2F; /* Matching main title color */
            font-size: 2em;
            margin-bottom: 20px;
            transition: color 0.5s ease;
        }

        .feedback-section textarea {
            width: calc(100% - 24px); /* Full width minus padding */
            padding: 12px;
            border: 1px solid #c0e0eb;
            border-radius: 6px;
            min-height: 100px; /* Minimum height for textarea */
            font-family: 'Poppins', sans-serif;
            font-size: 1em;
            margin-bottom: 20px;
            box-sizing: border-box; /* Include padding in width */
            resize: vertical; /* Allow vertical resizing */
            transition: background-color 0.5s ease, border-color 0.5s ease, color 0.5s ease;
        }

        .feedback-section button {
            background-color: #1a73e8; /* Blue for submit button */
            color: white;
            padding: 12px 30px;
            font-size: 18px;
            border-radius: 6px;
            cursor: pointer;
            border: none;
            transition: background-color 0.3s ease, transform 0.2s ease, color 0.5s ease;
        }

        .feedback-section button:hover {
            background-color: #0c5cb2;
            transform: translateY(-2px);
        }

        /* Star Rating Styles */
        .stars {
            font-size: 2.2em; /* Larger stars */
            color: #ccc; /* Default grey for unselected stars */
            cursor: pointer;
            margin-bottom: 15px; /* Space below stars */
        }

        .stars .fa-star {
            margin: 0 3px; /* Space between stars */
            transition: color 0.2s ease;
        }

        .stars .fa-star.hovered,
        .stars .fa-star.selected {
            color: #FFD700; /* Gold color for selected/hovered stars */
        }
        #noResultsMessage {
            color: #dc3545; /* Red color for no results message */
            font-weight: bold;
            margin-top: 20px;
            display: none; /* Hidden by default */
        }

        /* Styles for the clock */
        #globalClock {
            font-size: 1.2em;
            font-weight: bold;
            margin-bottom: 20px;
            color: #007bff; /* A nice blue color for the clock */
            transition: color 0.5s ease;
        }
        body.dark-mode #globalClock {
            color: #9ECFF4; /* Lighter blue in dark mode */
        }


        @keyframes confetti-scatter {
         0% { background-position: 0 0, 10px 5px, 5px 15px, 15px 0px, 20px 10px; }
         100% { background-position: 20px 20px, 40px 35px, 45px 55px, 65px 50px, 80px 70px; }
        }

        @keyframes confetti-scatter-dark {
         0% { background-position: 0 0, 10px 5px, 5px 15px, 15px 0px, 20px 10px; }
         100% { background-position: 20px 20px, 40px 35px, 45px 55px, 65px 50px, 80px 70px; }
        }

        /* Media Queries for responsiveness */
        @media (max-width: 768px) {
            .search-container {
                flex-direction: column; /* Stack input and button vertically */
                padding: 15px;
            }
            .search-container input[type="search"] {
                width: 100%;
                margin-bottom: 10px; /* Space between input and button */
                margin-left: 0;
            }
            .search-container button {
                width: 100%;
                margin-left: 0;
            }
            #contentArea, .feedback-section {
                padding: 20px;
                width: 95%; /* Make content wider on smaller screens */
            }
            #contentArea h1 {
                font-size: 2em;
            }
            #contentArea h3 {
                font-size: 1.2em;
            }
            #contentArea p {
                font-size: 1em;
            }
            #contentArea a {
                font-size: 0.9em;
            }
            button { /* General button adjustments for smaller screens */
                width: calc(100% - 20px); /* Account for margin */
                margin: 10px auto;
                font-size: 16px;
            }
            body > p {
                font-size: 0.8em;
            }
             .feedback-section h2 {
                font-size: 1.6em;
            }
            .stars {
                font-size: 1.8em;
            }
        }

        @media (max-width: 480px) {
            body {
                padding: 5px;
            }
            .search-container {
                padding: 10px;
            }
            #contentArea, .feedback-section {
                padding: 15px;
            }
            #contentArea h1 {
                font-size: 1.8em;
            }
            #contentArea h3 {
                font-size: 1em;
            }
            #contentArea p {
                font-size: 0.9em;
            }
            #contentArea a {
                font-size: 0.8em;
            }
            button {
                font-size: 14px;
                padding: 10px 15px;
            }
            body > p {
                font-size: 0.75em;
            }
            .feedback-section h2 {
                font-size: 1.4em;
            }
            .stars {
                font-size: 1.5em;
            }
        }
    </style>

<script>
let currentRating = 0; // To store the selected star rating

// Function to clear the content area
function clearContent() {
  document.getElementById("contentArea").innerHTML = `
    <p id="initialMessage">Click "Show Content" to see the favourites!</p>
  `; // Re-add the initial message after clearing
  document.getElementById('noResultsMessage').style.display = 'none'; // Hide no results message
}

// Data structure for the content to make search easier
const contentData = [
    { type: 'heading1', id: 'mainTitle', text: 'Shorcuteez' },
    { type: 'heading3', id: 'subTitle', text: 'Everyone\'s favourites' },
    { type: 'hr', id: 'hr1' },
    { type: 'paragraph', id: 'youtube-title', text: 'Youtube' },
    { type: 'link', href: 'http://www.youtube.com/', text: 'http://www.youtube.com/', target: '_blank' },
    { type: 'paragraph', id: 'w3schools-title', text: 'W3 SCHOOLS' },
    { type: 'link', href: 'https://www.w3schools.com/', text: 'https://www.w3schools.com/', target: '_blank' },
    { type: 'paragraph', id: 'google-title', text: 'Google' },
    { type: 'link', href: 'https://www.google.com/', text: 'https://www.google.com/', target: '_blank' },
    { type: 'paragraph', id: 'softonic-title', text: 'Softonic' },
    { type: 'link', href: 'https://www.softonic.com', text: 'https://www.softonic.com/', target: '_blank' },
    { type: 'paragraph', id: 'microsoft-title', text: 'Microsoft' },
    { type: 'link', href: 'https://www.microsoft.com', text: 'https://www.microsoft.com', target: '_blank' },
    { type: 'paragraph', id: 'chatgpt-title', text: 'ChatGPT' },
    { type: 'link', href: 'https://openai.com/chatgpt/overview/', text: 'https://openai.com/chatgpt/overview/', target: '_blank' },
    { type: 'paragraph', id: 'gemini-title', text: 'Gemini' },
    { type: 'link', href: 'https://gemini.google.com/app', text: 'https://gemini.google.com/app', target: '_blank' },
    { type: 'paragraph', id: 'deepseek-title', text: 'DeepSeek R1' },
    { type: 'link', href: 'https://deepseek.com/en', text: 'https://deepseek.com/en', target: '_blank' },
    { type: 'paragraph', id: 'github-title', text: 'GitHub' },
    { type: 'link', href: 'https://www.github.com', text: 'https://www.github.com/', target: '_blank' },
    { type: 'paragraph', id: 'wikipedia-title', text: 'Wikipedia' },
    { type: 'link', href: 'https://www.Wikipedia.org', text: 'https://www.Wikipedia.org/', target: '_blank' },
    { type: 'paragraph', id: 'yahoo-title', text: 'Yahoo' },
    { type: 'link', href: 'https://www.yahoo.com', text: 'https://www.yahoo.com/', target: '_blank' },
    { type: 'paragraph', id: 'yandex-title', text: 'Yandex Search Engine' },
    { type: 'link', href: 'https://www.yandex.ru', text: 'https://www.yandex.ru/', target: '_blank' },
    { type: 'paragraph', id: 'duckduckgo-title', text: 'DuckDuckGo' },
    { type: 'link', href: 'https://www.duckduckgo.com', text: 'https://www.duckduckgo.com/', target: '_blank' },
    { type: 'paragraph', id: 'openai-title', text: 'OpenAI' },
    { type: 'link', href: 'https://www.openai.com', text: 'https://www.openai.com/', target: '_blank' },
    { type: 'paragraph', id: 'facebook-title', text: 'Facebook' },
    { type: 'link', href: 'https://www.facebook.com', text: 'https://www.facebook.com/', target: '_blank' },
    { type: 'paragraph', id: 'instagram-title', text: 'Instagram' },
    { type: 'link', href: 'https://www.instagram.com', text: 'https://www.instagram.com/', target: '_blank' },
    { type: 'paragraph', id: 'x-title', text: 'X' },
    { type: 'link', href: 'https://www.x.com', text: 'https://www.x.com/', target: '_blank' },
    { type: 'paragraph', id: 'whatsapp-title', text: 'WhatsApp' },
    { type: 'link', href: 'https://www.whatsapp.com', text: 'https://www.whatsapp.com/', target: '_blank' },
    { type: 'paragraph', id: 'reddit-title', text: 'Reddit' },
    { type: 'link', href: 'https://www.reddit.com', text: 'https://www.reddit.com/', target: '_blank' },
    { type: 'paragraph', id: 'tiktok-title', text: 'TikTok(If its Banned in your country i strongly advise not to use it.)' },
    { type: 'link', href: 'https://www.tiktok.com', text: 'https://www.tiktok.com/', target: '_blank' },
    { type: 'paragraph', id: 'linkedin-title', text: 'Linkedin' },
    { type: 'link', href: 'https://www.linkedin.com', text: 'https://www.linkedin.com/', target: '_blank' },
    { type: 'paragraph', id: 'vk-title', text: 'VK search engine(russian)' },
    { type: 'link', href: 'https://www.vk.com', text: 'https://www.vk.com/', target: '_blank' },
    { type: 'paragraph', id: 'telegram-title', text: 'Telegram' },
    { type: 'link', href: 'https://www.telegram.com', text: 'https://www.telegram.com/', target: '_blank' },
    { type: 'paragraph', id: 'discord-title', text: 'Discord' },
    { type: 'link', href: 'https://www.discord.com', text: 'https://www.discord.com/', target: '_blank' },
    { type: 'paragraph', id: 'pinterest-title', text: 'Pinterest' },
    { type: 'link', href: 'https://www.pinterest.com', text: 'https://www.pinterest.com/', target: '_blank' },
    { type: 'paragraph', id: 'tumblr-title', text: 'Tumblr' },
    { type: 'link', href: 'https://www.tumblr.com', text: 'https://www.tumblr.com/', target: '_blank' },
    { type: 'paragraph', id: 'netflix-title', text: 'Netflix' },
    { type: 'link', href: 'https://www.netflix.com', text: 'https://www.netflix.com/', target: '_blank' },
    { type: 'paragraph', id: 'live-title', text: 'Live' },
    { type: 'link', href: 'https://www.live.com', text: 'https://www.live.com/', target: '_blank' },
    { type: 'paragraph', id: 'microsoft365-title', text: 'Microsoft 365 & Cloud Services' },
    { type: 'link', href: 'https://www.microsoftonline.com', text: 'https://www.microsoftonline.com/', target: '_blank' },
    { type: 'paragraph', id: 'baidu-title', text: 'Baidu search engine(chinese)' },
    { type: 'link', href: 'https://www.baidu.com', text: 'https://www.baidu.com/', target: '_blank' },
    { type: 'paragraph', id: 'temu-title', text: 'Temu' },
    { type: 'link', href: 'https://www.temu.com', text: 'https://www.temu.com', target: '_blank' },
    { type: 'paragraph', id: 'msoffice-title', text: 'MS Office Online' },
    { type: 'link', href: 'https://www.office.com', text: 'https://www.office.com/', target: '_blank' },
    { type: 'paragraph', id: 'apple-title', text: 'Apple' },
    { type: 'link', href: 'https://www.apple.com', text: 'https://www.apple.com/', target: '_blank' },
    { type: 'paragraph', id: 'weather-title', text: 'Weather Forcast' },
    { type: 'link', href: 'https://www.weather.com', text: 'https://www.weather.com/', target: '_blank' },
    { type: 'paragraph', id: 'canva-title', text: 'Canva' },
    { type: 'link', href: 'https://www.canva.com', text: 'https://www.canva.com/', target: '_blank' },
    { type: 'paragraph', id: 'vercel-title', text: 'Vercel' },
    { type: 'link', href: 'https://www.vercel.com/', text: 'https://www.vercel.com/', target: '_blank' },
    { type: 'paragraph', id: 'spotify-title', text: 'Spotify' },
    { type: 'link', href: 'https://www.spotify.com', text: 'https://www.spotify.com/', target: '_blank' },
    
    { type: 'hr', id: 'hr2' },
    { type: 'heading1', id: 'gamesTitle', text: 'Our Games' },
    { type: 'paragraph', id: 'tictactoe-title', text: 'Tic Tac Toe' },
    { type: 'link', href: 'https://mygame-xi-ten.vercel.app/', text: 'https://mygame-xi-ten.vercel.app/', target: '_blank' },
    { type: 'paragraph', id: 'snakegame-title', text: 'Snake Game' },
    { type: 'link', href: 'https://snake-game-lime-seven.vercel.app/', text: 'https://snake-game-lime-seven.vercel.app/', target: '_blank' },
    { type: 'paragraph', id: 'dungeon-title', text: 'Dungeon Crawler' },
    { type: 'link', href: 'https://dugeon-crawler.vercel.app/', text: 'https://dugeon-crawler.vercel.app/', target: '_blank' },
    { type: 'hr', id: 'hr3' },
    { type: 'heading1', id: 'gamingWebsitesTitle', text: 'Gaming Websites' },
    { type: 'paragraph', id: 'roblox-title', text: 'Roblox' },
    { type: 'link', href: 'https://www.roblox.com', text: 'https://www.roblox.com/', target: '_blank' },
    { type: 'paragraph', id: 'steam-title', text: 'Steam' },
    { type: 'link', href: 'https://www.steampowered.com', text: 'https://www.steampowered.com/', target: '_blank' },
    { type: 'paragraph', id: 'poki-title', text: 'Poki Games' },
    { type: 'link', href: 'https://www.poki.com', text: 'https://www.poki.com/', target: '_blank' },
    { type: 'paragraph', id: 'xbox-title', text: 'Xbox' },
    { type: 'link', href: 'https://www.xbox.com', text: 'https://www.xbox.com/', target: '_blank' },
    { type: 'paragraph', id: 'playstation-title', text: 'Playstation' },
    { type: 'link', href: 'https://www.playstation.com', text: 'https://www.playstation.com/', target: '_blank' },
    { type: 'paragraph', id: 'epicgames-title', text: 'Epic Games Store' },
    { type: 'link', href: 'https://www.epicgames.com', text: 'https://www.epicgames.com/', target: '_blank' },
    { type: 'paragraph', id: 'nintendo-title', text: 'Nintendo' },
    { type: 'link', href: 'https://www.nintendo.com', text: 'https://www.nintendo.com/', target: '_blank' },
    { type: 'paragraph', id: 'minecraft-title', text: 'Minecraft' },
    { type: 'link', href: 'https://www.minecraft.net', text: 'https://www.minecraft.net/', target: '_blank' },
    { type: 'hr', id: 'hr4' },
    { type: 'heading3', id: 'thanks-you', text: 'THANK - YOU' }
];

// Function to load the "main page" content
function loadMainContent() {
    const contentArea = document.getElementById("contentArea");
    contentArea.innerHTML = ''; // Clear existing content

    contentData.forEach(item => {
        let element;
        if (item.type === 'heading1') {
            element = document.createElement('h1');
            element.id = item.id;
            element.textContent = item.text;
        } else if (item.type === 'heading3') {
            element = document.createElement('h3');
            element.id = item.id;
            element.textContent = item.text;
        } else if (item.type === 'paragraph') {
            element = document.createElement('p');
            element.id = item.id;
            element.textContent = item.text;
        } else if (item.type === 'link') {
            element = document.createElement('a');
            element.href = item.href;
            element.textContent = item.text;
            if (item.target) { // Add target="_blank" if specified in contentData
                element.target = item.target;
            }
        } else if (item.type === 'hr') {
            element = document.createElement('hr');
            element.id = item.id;
        }
        if (element) {
            contentArea.appendChild(element);
        }
    });
    document.getElementById('noResultsMessage').style.display = 'none'; // Ensure this is hidden when content is loaded
}

// Function to update the global clock
function updateClock() {
    const now = new Date();
    const options = {
        timeZone: 'Asia/Kolkata', // Set to Indian Standard Time (IST)
        hour: '2-digit',
        minute: '2-digit',
        second: '2-digit',
        hour12: true
    };
    const formatter = new Intl.DateTimeFormat('en-US', options);
    const formattedTime = formatter.format(now);
    document.getElementById('globalClock').textContent = `Current Time in India: ${formattedTime}`;
}

// Dark Mode Toggle Function
function toggleDarkMode() {
    document.body.classList.toggle('dark-mode');
    const isDarkMode = document.body.classList.contains('dark-mode');
    localStorage.setItem('darkMode', isDarkMode); // Save dark mode state
    // Update button text
    document.getElementById('darkModeToggle').textContent = isDarkMode ? 'Light Mode' : 'Dark Mode';
}

// Apply dark mode on load
window.onload = function() {
    const savedDarkMode = localStorage.getItem('darkMode');
    if (savedDarkMode === 'true') {
        document.body.classList.add('dark-mode');
        document.getElementById('darkModeToggle').textContent = 'Light Mode';
    } else {
        document.getElementById('darkModeToggle').textContent = 'Dark Mode';
    }
    // Attach event listener to dark mode toggle button
    document.getElementById('darkModeToggle').addEventListener('click', toggleDarkMode);

    // Initialize stars
    const stars = document.querySelectorAll('.stars .fa-star');
    stars.forEach((star, index) => {
        star.addEventListener('mouseover', () => highlightStars(index + 1));
        star.addEventListener('click', () => selectRating(index + 1));
    });
    document.querySelector('.stars').addEventListener('mouseout', resetStars);

    // Initial call to update clock and then set interval
    updateClock();
    setInterval(updateClock, 1000); // Update every second
};


// Star Rating Functions
function highlightStars(index) {
    const stars = document.querySelectorAll('.stars .fa-star');
    stars.forEach((star, i) => {
        if (i < index) {
            star.classList.add('hovered');
        } else {
            star.classList.remove('hovered');
        }
    });
}

function selectRating(rating) {
    currentRating = rating;
    const stars = document.querySelectorAll('.stars .fa-star');
    stars.forEach((star, i) => {
        if (i < rating) {
            star.classList.add('selected');
        } else {
            star.classList.remove('selected');
        }
    });
    document.getElementById('feedbackRating').value = currentRating; // Update hidden input
}

// Reset stars when mouse leaves the star container
function resetStars() {
    if (currentRating === 0) {
        const stars = document.querySelectorAll('.stars .fa-star');
        stars.forEach(star => {
            star.classList.remove('hovered', 'selected');
        });
    } else {
        selectRating(currentRating); // Re-apply selected state if a rating is set
    }
}

// Formspree Submission Logic
const feedbackForm = document.getElementById('feedbackForm');
if (feedbackForm) { // Ensure form exists before adding listener
    feedbackForm.addEventListener('submit', async function(event) {
        event.preventDefault(); // Prevent the default form submission (page reload)

        const form = event.target;
        const formData = new FormData(form);

        try {
            const response = await fetch(form.action, {
                method: form.method,
                body: formData,
                headers: {
                    'Accept': 'application/json'
                }
            });

            if (response.ok) {
                alert('Feedback sent successfully! Thank you.');
                document.getElementById('feedbackText').value = '';
                currentRating = 0;
                selectRating(0);
                document.getElementById('feedbackRating').value = 0;
            } else {
                const data = await response.json();
                if (data.errors) {
                    alert('Error sending feedback: ' + data.errors.map(e => e.message).join(', '));
                } else {
                    alert('Error sending feedback. Please try again.');
                }
            }
        } catch (error) {
            console.error('Network or submission error:', error);
            alert('An error occurred. Please check your internet connection and try again.');
        }
    });
}

// Corrected Search Functionality using the contentData array
function searchWebsites() {
    const searchTerm = document.getElementById('searchInput').value.toLowerCase();
    const contentArea = document.getElementById('contentArea');
    contentArea.innerHTML = ''; // Clear previous content

    let foundResults = false;

    // Filter contentData to find matching items
    const filteredContent = [];
    for (let i = 0; i < contentData.length; i++) {
        const item = contentData[i];
        if (item.type === 'paragraph' && contentData[i + 1] && contentData[i + 1].type === 'link') {
            const paragraphText = item.text.toLowerCase();
            const linkHref = contentData[i + 1].href.toLowerCase();

            if (paragraphText.includes(searchTerm) || linkHref.includes(searchTerm)) {
                filteredContent.push(item);
                filteredContent.push(contentData[i + 1]);
                foundResults = true;
            }
        } else if (item.type === 'heading1' || item.type === 'heading3' || item.type === 'hr') {
            // Keep headings and HRs if they are part of the original structure or a general search term
            // For simplicity, we'll only show matched paragraph/link pairs for now.
            // If you want headings/HRs to appear with relevant search results,
            // you'd need more complex logic to include them contextually.
        }
    }

    if (foundResults) {
        // Append filtered content to contentArea
        filteredContent.forEach(item => {
            let element;
            if (item.type === 'paragraph') {
                element = document.createElement('p');
                element.id = item.id;
                element.textContent = item.text;
            } else if (item.type === 'link') {
                element = document.createElement('a');
                element.href = item.href;
                element.textContent = item.text;
                if (item.target) {
                    element.target = item.target; // Ensure target="_blank" is applied
                }
            }
            if (element) {
                contentArea.appendChild(element);
            }
        });
        document.getElementById('noResultsMessage').style.display = 'none';
    } else {
        // Display no results message
        contentArea.innerHTML = ''; // Clear everything first
        const messageParagraph = document.createElement('p');
        messageParagraph.id = 'noResultsMessage';
        messageParagraph.style.color = '#dc3545';
        messageParagraph.style.fontWeight = 'bold';
        messageParagraph.style.marginTop = '20px';
        messageParagraph.textContent = 'No matching websites found.';
        contentArea.appendChild(messageParagraph);
    }
}
</script>
</head>
<body>

<div class="search-container">
    <input type="search" id="searchInput" placeholder="Search websites..." onkeyup="if(event.keyCode === 13) searchWebsites()">
    <button onclick="searchWebsites()">Search</button>
</div>

<div id="globalClock"></div>

<div id="contentArea">
    <p id="initialMessage">Click "Show Content" to see the favourites!</p>
</div>

<button type="button" onclick="loadMainContent()">Show Content</button>
<button type="button" onclick="clearContent()">Clear Content</button>
<button type="button" id="darkModeToggle">Toggle Dark Mode</button>

<div class="feedback-section">
    <h2>Give Feedback</h2>
    <form id="feedbackForm" action="https://formspree.io/f/mzzgbpzj" method="POST">
        <div class="stars" onmouseout="resetStars()">
            <i class="fa-solid fa-star" onmouseover="highlightStars(1)" onclick="selectRating(1)"></i>
            <i class="fa-solid fa-star" onmouseover="highlightStars(2)" onclick="selectRating(2)"></i>
            <i class="fa-solid fa-star" onmouseover="highlightStars(3)" onclick="selectRating(3)"></i>
            <i class="fa-solid fa-star" onmouseover="highlightStars(4)" onclick="selectRating(4)"></i>
            <i class="fa-solid fa-star" onmouseover="highlightStars(5)" onclick="selectRating(5)"></i>
        </div>
        <input type="hidden" name="rating" id="feedbackRating" value="0">
        <textarea id="feedbackText" name="feedback_message" placeholder="Optional: Tell us more about your experience..."></textarea>
        <button type="submit">Submit Feedback</button>
    </form>
</div>

<p>@2025----------Harshj58----------WEBLITE</p>
<a href="https://help-page-pied.vercel.app/" target="_blank">HELP</a>

</body>
</html>